# Generated by Django 5.1.6 on 2025-05-25 16:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('characters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RaceTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='racialfeature',
            options={'ordering': ['race', 'code']},
        ),
        migrations.AddField(
            model_name='race',
            name='charisma_bonus',
            field=models.IntegerField(default=0, help_text='Charisma increase'),
        ),
        migrations.AddField(
            model_name='race',
            name='constitution_bonus',
            field=models.IntegerField(default=0, help_text='Constitution increase'),
        ),
        migrations.AddField(
            model_name='race',
            name='dexterity_bonus',
            field=models.IntegerField(default=0, help_text='Dexterity increase'),
        ),
        migrations.AddField(
            model_name='race',
            name='intelligence_bonus',
            field=models.IntegerField(default=0, help_text='Intelligence increase'),
        ),
        migrations.AddField(
            model_name='race',
            name='size',
            field=models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], default='medium', help_text='Small / Medium / Large', max_length=6),
        ),
        migrations.AddField(
            model_name='race',
            name='speed',
            field=models.PositiveIntegerField(default=30),
        ),
        migrations.AddField(
            model_name='race',
            name='strength_bonus',
            field=models.IntegerField(default=0, help_text='Strength increase'),
        ),
        migrations.AddField(
            model_name='race',
            name='wisdom_bonus',
            field=models.IntegerField(default=0, help_text='Wisdom increase'),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='has_options',
            field=models.BooleanField(default=False, help_text='If checked, you must add at least one Option below.'),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_basic_failure',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_basic_success',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_critical_failure',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_critical_success',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_failure',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_granularity',
            field=models.CharField(blank=True, choices=[('basic', 'Basic (Success / Failure)'), ('normal', 'Normal (Crit Success / Success / Failure / Crit Failure)')], help_text='Basic or full-table?', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='racialfeature',
            name='saving_throw_success',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='subrace',
            name='charisma_bonus',
            field=models.IntegerField(default=0, help_text='Charisma increase'),
        ),
        migrations.AddField(
            model_name='subrace',
            name='constitution_bonus',
            field=models.IntegerField(default=0, help_text='Constitution increase'),
        ),
        migrations.AddField(
            model_name='subrace',
            name='dexterity_bonus',
            field=models.IntegerField(default=0, help_text='Dexterity increase'),
        ),
        migrations.AddField(
            model_name='subrace',
            name='intelligence_bonus',
            field=models.IntegerField(default=0, help_text='Intelligence increase'),
        ),
        migrations.AddField(
            model_name='subrace',
            name='size',
            field=models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], default='medium', help_text='Small / Medium / Large', max_length=6),
        ),
        migrations.AddField(
            model_name='subrace',
            name='speed',
            field=models.PositiveIntegerField(default=30),
        ),
        migrations.AddField(
            model_name='subrace',
            name='strength_bonus',
            field=models.IntegerField(default=0, help_text='Strength increase'),
        ),
        migrations.AddField(
            model_name='subrace',
            name='wisdom_bonus',
            field=models.IntegerField(default=0, help_text='Wisdom increase'),
        ),
        migrations.AlterField(
            model_name='race',
            name='code',
            field=models.SlugField(max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='race',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='racialfeature',
            name='code',
            field=models.CharField(help_text="Short identifier, e.g. 'darkvision'", max_length=10, unique=True),
        ),
        migrations.AlterField(
            model_name='racialfeature',
            name='damage_type',
            field=models.CharField(blank=True, choices=[('physical_bludgeoning', 'Physical Bludgeoning'), ('physical_slashing', 'Physical Slashing'), ('physical_piercing', 'Physical Piercing'), ('explosive', 'Explosive'), ('magical_bludgeoning', 'Magical Bludgeoning'), ('magical_slashing', 'Magical Slashing'), ('magical_piercing', 'Magical Piercing'), ('acid', 'Acid'), ('cold', 'Cold'), ('fire', 'Fire'), ('force', 'Force'), ('lightning', 'Lightning'), ('necrotic', 'Necrotic'), ('poison', 'Poison'), ('psychic', 'Psychic'), ('radiant', 'Radiant'), ('thunder', 'Thunder'), ('true', 'True')], help_text='If this deals damage, pick its damage type', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='racialfeature',
            name='race',
            field=models.ForeignKey(help_text='Which Race grants this feature?', on_delete=django.db.models.deletion.CASCADE, related_name='features', to='characters.race'),
        ),
        migrations.AlterField(
            model_name='racialfeature',
            name='saving_throw_required',
            field=models.BooleanField(default=False, help_text='Does this allow a saving throw?'),
        ),
        migrations.AlterField(
            model_name='racialfeature',
            name='saving_throw_type',
            field=models.CharField(blank=True, choices=[('reflex', 'Reflex'), ('fortitude', 'Fortitude'), ('will', 'Will')], help_text='Which save?', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='racialfeature',
            name='subrace',
            field=models.ForeignKey(blank=True, help_text='(Optional) only this Subrace gets it', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='characters.subrace'),
        ),
        migrations.AlterField(
            model_name='subrace',
            name='code',
            field=models.SlugField(max_length=20, unique=True),
        ),
        migrations.CreateModel(
            name='RaceFeatureOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='characters.racialfeature')),
                ('grants_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_by_options', to='characters.racialfeature')),
            ],
        ),
        migrations.AddField(
            model_name='race',
            name='tags',
            field=models.ManyToManyField(blank=True, to='characters.racetag'),
        ),
        migrations.AddField(
            model_name='subrace',
            name='tags',
            field=models.ManyToManyField(blank=True, to='characters.racetag'),
        ),
    ]
